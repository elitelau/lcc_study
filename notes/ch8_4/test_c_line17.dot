////////////////////////////////////////////////////////////////////////////////
// Generate the dot file for drawing semantic structure of statements

// File name: test.c
// Line number: 17
////////////////////////////////////////////////////////////////////////////////

digraph semantic_dag  {
    node [color=lightblue2, style=filled];

    v1 [label="CALLI int"];
    v2 [label="RIGHT ptr->int func(ptr->const char,...)"];
    v1 -> v2

    v3 [label="RIGHT void"];
    v4 [label="ADDRGP ptr->int func(ptr->const char,...)\n\[printf\]", shape=box];
    v2 -> v3
    v2 -> v4

    v5 [label="COND ptr->char"];
    v6 [label="ARGP ptr->char"];
    v3 -> v5
    v3 -> v6

    v7 [label="NEI int"];
    v8 [label="RIGHT ptr->char"];
    v5 -> v7
    v5 -> v8

    v9 [label="ARGP ptr->const char"];
    v6 -> v5
    v6 -> v9

    v10 [label="CALLI int"];
    v11 [label="CNSTI int\n\(0\)", shape=box];
    v7 -> v10
    v7 -> v11

    v12 [label="ASGNP ptr->char"];
    v13 [label="ASGNP ptr->char"];
    v8 -> v12
    v8 -> v13

    v14 [label="ADDRGP ptr->const char\n\[gen\]", shape=box];
    v9 -> v14

    v15 [label="ADDRGP ptr->int func(void)\n\[f\]", shape=box];
    v10 -> v15

    v16 [label="ADDRLP ptr->ptr->char\n\[gen\]", shape=box];
    v17 [label="ADDRGP ptr->char\n\[gen\]", shape=box];
    v12 -> v16
    v12 -> v17

    v18 [label="ADDRLP ptr->ptr->char\n\[gen\]", shape=box];
    v19 [label="ADDRGP ptr->char\n\[gen\]", shape=box];
    v13 -> v18
    v13 -> v19

}
